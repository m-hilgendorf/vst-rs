var N=null,E="",T="t",U="u",searchIndex={};
var R=["usize","inputiterator","outputiterator","Number of channels","is_empty","Returns true if the buffer is empty","Access channel at the given index, unchecked","Split borrowing at the given index, like for slices","intoiterator","Reserved for host, must be 0.","Deprecated unused member.","Reserved for future use.","_reserved","event_type","byte_size","delta_frames","Number of samples into the current processing block that…","Reserved for future use. Should be 0.","Generic flags, none defined in VST api yet.","_reserved1","_reserved2","Deprecated.","vst::api","supported","channelflags","Returns an empty set of flags","Returns the set containing all flags.","pluginflags","Returns the raw value of the flags currently stored.","from_bits","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","intersects","Returns `true` if there are flags common to both `self`…","contains","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","modifierkey","midieventflags","option","timeinfoflags","is_all","insert","remove","toggle","SpeakerArrangementType","Empty arrangement.","speakerarrangementtype","MidiEvent","A midi event.","note_length","note_offset","note_off_velocity","Note off velocity between 0 and 127.","SysExEvent","A system exclusive event.","timeinfo","pluginloaderror","pluginloader","plugininstance","hostbuffer","input_count","output_count","get_info","audiobuffer","process_events","pluginparameters","channelinfo","string","If `preset_chunks` is set to true in plugin info, this…","hostcallbackproc","set_parameter","get_parameter","vst::buffer","try_from","result","borrow_mut","try_into","into_iter","type_id","to_owned","clone_into","borrow","typeid","vst::editor","vst::channels","vst::event","vst::host","vst::plugin","vst::util","write_into","placeholderevent","automate","get_plugin_id","get_time_info","get_block_size","Get block size.","set_sample_rate","set_block_size","vendor_specific","get_tail_size","process_f64","get_input_info","get_output_info","get_parameter_object","sysexevent","hostcallback","ordering","knobmode","channelproperties","category","partial_cmp","default","formatter","Returns the set difference of the two sets of flags.","sub_assign","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","from_iter","WriteIntoPlaceholder","AudioBuffer","SendEventBuffer","ChannelProperties","FileSelect","Supported","ProcessLevel","HostLanguage","FileSelectCommand","FileSelectType","EventType","SmpteFrameRate","ChannelFlags","PluginFlags","ModifierKey","MidiEventFlags","TimeInfoFlags","ArrangementTarget","StereoChannel","StereoConfig","SurroundConfig","ChannelInfo","PluginLoadError","PluginLoader","HostBuffer","PluginParameters","HostCallback","AtomicFloat","ParameterTransfer","InputIterator","OutputIterator","EventIterator","PluginInstance","ParameterTransferIterator"];

searchIndex["vst"]={"doc":"A rust implementation of the VST2.4 API.","i":[[0,"buffer","vst","Buffers to safely work with audio samples.",N,N],[3,R[135],R[79],"`AudioBuffer` contains references to the audio buffers for…",N,N],[3,"Inputs",E,"Wrapper type to access the buffers for the input channels…",N,N],[3,R[163],E,"Iterator over buffers for input channels of an…",N,N],[3,"Outputs",E,"Wrapper type to access the buffers for the output channels…",N,N],[3,R[164],E,"Iterator over buffers for output channels of an…",N,N],[3,R[136],E,"This buffer is used for sending midi events through the…",N,N],[6,"PlaceholderEvent",E,"This is used as a placeholder to pre-allocate space for a…",N,N],[8,R[134],E,"This trait is used by `SendEventBuffer::send_events` to…",N,N],[10,R[96],E,"writes an event into the given placeholder memory location",0,[[[R[97]],["self"]]]],[11,"from_raw",E,"Create an `AudioBuffer` from raw pointers. Only really…",1,[[[R[0]]],["self"]]],[11,R[67],E,"The number of input channels that this buffer was created…",1,[[["self"]],[R[0]]]],[11,R[68],E,"The number of output channels that this buffer was created…",1,[[["self"]],[R[0]]]],[11,"samples",E,"The number of samples in this buffer (same for all channels)",1,[[["self"]],[R[0]]]],[11,"split",E,"Split this buffer into separate inputs and outputs.",1,[[["self"]]]],[11,"zip",E,"Zip together buffers.",1,[[["self"]],[["zip",[R[1],R[2]]],[R[1]],[R[2]]]]],[11,"len",E,R[3],2,[[["self"]],[R[0]]]],[11,R[4],E,R[5],2,[[["self"]],["bool"]]],[11,"get",E,R[6],2,[[["self"],[R[0]]]]],[11,"split_at",E,R[7],2,[[["self"],[R[0]]]]],[11,"len",E,R[3],3,[[["self"]],[R[0]]]],[11,R[4],E,R[5],3,[[["self"]],["bool"]]],[11,"get",E,R[6],3,[[["self"],[R[0]]]]],[11,"get_mut",E,"Mutably access channel at the given index, unchecked",3,[[["self"],[R[0]]]]],[11,"split_at_mut",E,R[7],3,[[["self"],[R[0]]]]],[11,"new",E,"Creates a buffer for sending up to the given number of…",4,[[[R[0]]],["self"]]],[11,"send_events",E,"Sends events to the host. See the `fwd_midi` example.",4,[[["host"],["self"],[R[8]]]]],[11,"send_events_to_plugin",E,"Sends events from the host to a plugin.",4,[[["self"],[R[8]],["plugin"]]]],[0,"api","vst","Structures and types for interfacing with the VST 2.4 API.",N,N],[3,"AEffect",R[22],"Used with the VST API to pass around plugin information.",N,N],[12,"magic",E,"Magic number. Must be `['V', 'S', 'T', 'P']`.",5,N],[12,"dispatcher",E,"Host to plug-in dispatcher.",5,N],[12,"_process",E,"Accumulating process mode is deprecated in VST 2.4! Use…",5,N],[12,"setParameter",E,"Set value of automatable parameter.",5,N],[12,"getParameter",E,"Get value of automatable parameter.",5,N],[12,"numPrograms",E,"Number of programs (Presets).",5,N],[12,"numParams",E,"Number of parameters. All programs are assumed to have…",5,N],[12,"numInputs",E,"Number of audio inputs.",5,N],[12,"numOutputs",E,"Number of audio outputs.",5,N],[12,"flags",E,"Bitmask made of values from `api::PluginFlags`.",5,N],[12,"reserved1",E,R[9],5,N],[12,"reserved2",E,R[9],5,N],[12,"initialDelay",E,"For algorithms which need input in the first place (Group…",5,N],[12,"_realQualities",E,R[10],5,N],[12,"_offQualities",E,R[10],5,N],[12,"_ioRatio",E,R[10],5,N],[12,"object",E,"Void pointer usable by api to store object data.",5,N],[12,"user",E,"User defined pointer.",5,N],[12,"uniqueId",E,"Registered unique identifier (register it at Steinberg 3rd…",5,N],[12,"version",E,"Plug-in version (e.g. 1100 for v1.1.0.0).",5,N],[12,"processReplacing",E,"Process audio samples in replacing mode.",5,N],[12,"processReplacingF64",E,"Process double-precision audio samples in replacing mode.",5,N],[12,"future",E,"Reserved for future use (please zero).",5,N],[3,R[137],E,"Information about a channel. Only some hosts use this…",N,N],[12,"name",E,"Channel name.",6,N],[12,"flags",E,"Flags found in `ChannelFlags`.",6,N],[12,"arrangement_type",E,"Type of speaker arrangement this channel is a part of.",6,N],[12,"short_name",E,"Name of channel (recommended: 6 characters + delimiter).",6,N],[12,"future",E,R[11],6,N],[3,"FileType",E,"File type descriptor.",N,N],[12,"name",E,"Display name of file type.",7,N],[12,"osx_type",E,"OS X file type.",7,N],[12,"win_type",E,"Windows file type.",7,N],[12,"nix_type",E,"Unix file type.",7,N],[12,"mime_type_1",E,"MIME type.",7,N],[12,"mime_type_2",E,"Additional MIME type.",7,N],[3,R[138],E,"File selector descriptor used in…",N,N],[12,"command",E,"The type of file selection to perform.",8,N],[12,"select_type",E,"The file selector to open.",8,N],[12,"mac_creator",E,"Unknown. 0 = no creator.",8,N],[12,"num_types",E,"Number of file types.",8,N],[12,"file_types",E,"List of file types to show.",8,N],[12,"title",E,"File selector's title.",8,N],[12,"initial_path",E,"Initial path.",8,N],[12,"return_path",E,"Used when operation returns a single path.",8,N],[12,"size_return_path",E,"Size of the path buffer in bytes.",8,N],[12,"return_multiple_paths",E,"Used when operation returns multiple paths.",8,N],[12,"num_paths",E,"Number of paths returned.",8,N],[12,"reserved",E,"Reserved by host.",8,N],[12,"future",E,R[11],8,N],[3,"Events",E,"A struct which contains events.",N,N],[12,"num_events",E,"Number of events.",9,N],[12,R[12],E,R[17],9,N],[12,"events",E,"Variable-length array of pointers to `api::Event` objects.",9,N],[3,R[165],E,"An iterator over events, returned by `api::Events::events`",N,N],[3,"Event",E,"A VST event intended to be casted to a corresponding type.",N,N],[12,R[13],E,"The type of event. This lets you know which event this…",10,N],[12,R[14],E,"Size of this structure; `mem::sizeof::<Event>()`.",10,N],[12,R[15],E,R[16],10,N],[12,"_flags",E,R[18],10,N],[12,R[12],E,"The `Event` type is cast appropriately, so this acts as…",10,N],[3,R[54],E,R[55],N,N],[12,R[13],E,"Should be `EventType::Midi`.",11,N],[12,R[14],E,"Size of this structure; `mem::sizeof::<MidiEvent>()`.",11,N],[12,R[15],E,R[16],11,N],[12,"flags",E,"See `MidiEventFlags`.",11,N],[12,R[56],E,"Length in sample frames of entire note if available,…",11,N],[12,R[57],E,"Offset in samples into note from start if available,…",11,N],[12,"midi_data",E,"1 to 3 midi bytes. TODO: Doc",11,N],[12,"_midi_reserved",E,"Reserved midi byte (0).",11,N],[12,"detune",E,"Detuning between -63 and +64 cents, for scales other than…",11,N],[12,R[58],E,R[59],11,N],[12,R[19],E,R[17],11,N],[12,R[20],E,R[17],11,N],[3,R[60],E,"A midi system exclusive event.",N,N],[12,R[13],E,"Should be `EventType::SysEx`.",12,N],[12,R[14],E,"Size of this structure; `mem::sizeof::<SysExEvent>()`.",12,N],[12,R[15],E,R[16],12,N],[12,"_flags",E,R[18],12,N],[12,"data_size",E,"Size of payload in bytes.",12,N],[12,R[19],E,R[17],12,N],[12,"system_data",E,"Pointer to payload.",12,N],[12,R[20],E,R[17],12,N],[3,"TimeInfo",E,"Describes the time at the start of the block currently…",N,N],[12,"sample_pos",E,"current Position in audio samples (always valid)",13,N],[12,"sample_rate",E,"current Sample Rate in Hertz (always valid)",13,N],[12,"nanoseconds",E,"System Time in nanoseconds (10^-9 second)",13,N],[12,"ppq_pos",E,"Musical Position, in Quarter Note (1.0 equals 1 Quarter…",13,N],[12,"tempo",E,"current Tempo in BPM (Beats Per Minute)",13,N],[12,"bar_start_pos",E,"last Bar Start Position, in Quarter Note",13,N],[12,"cycle_start_pos",E,"Cycle Start (left locator), in Quarter Note",13,N],[12,"cycle_end_pos",E,"Cycle End (right locator), in Quarter Note",13,N],[12,"time_sig_numerator",E,"Time Signature Numerator (e.g. 3 for 3/4)",13,N],[12,"time_sig_denominator",E,"Time Signature Denominator (e.g. 4 for 3/4)",13,N],[12,"smpte_offset",E,"SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",13,N],[12,"smpte_frame_rate",E,"See `SmpteFrameRate`",13,N],[12,"samples_to_next_clock",E,"MIDI Clock Resolution (24 Per Quarter Note), can be…",13,N],[12,"flags",E,"See `TimeInfoFlags`",13,N],[3,R[146],E,"Flags for VST channels.",N,N],[3,R[147],E,"Flags for VST plugins.",N,N],[3,R[148],E,"Cross platform modifier key flags.",N,N],[3,R[149],E,"MIDI event flags.",N,N],[3,R[150],E,"Used in the `flags` field of `TimeInfo`, and for querying…",N,N],[4,R[51],E,"Tells the host how the channels are intended to be used in…",N,N],[13,"Custom",E,"User defined arrangement.",14,N],[13,"Empty",E,R[52],14,N],[13,"Mono",E,"Mono.",14,N],[13,"Stereo",E,"L R",14,N],[13,"StereoSurround",E,"Ls Rs",14,N],[13,"StereoCenter",E,"Lc Rc",14,N],[13,"StereoSide",E,"Sl Sr",14,N],[13,"StereoCLfe",E,"C Lfe",14,N],[13,"Cinema30",E,"L R C",14,N],[13,"Music30",E,"L R S",14,N],[13,"Cinema31",E,"L R C Lfe",14,N],[13,"Music31",E,"L R Lfe S",14,N],[13,"Cinema40",E,"L R C S (LCRS)",14,N],[13,"Music40",E,"L R Ls Rs (Quadro)",14,N],[13,"Cinema41",E,"L R C Lfe S (LCRS + Lfe)",14,N],[13,"Music41",E,"L R Lfe Ls Rs (Quadro + Lfe)",14,N],[13,"Surround50",E,"L R C Ls Rs",14,N],[13,"Surround51",E,"L R C Lfe Ls Rs",14,N],[13,"Cinema60",E,"L R C Ls  Rs Cs",14,N],[13,"Music60",E,"L R Ls Rs  Sl Sr",14,N],[13,"Cinema61",E,"L R C Lfe Ls Rs Cs",14,N],[13,"Music61",E,"L R Lfe Ls Rs Sl Sr",14,N],[13,"Cinema70",E,"L R C Ls Rs Lc Rc",14,N],[13,"Music70",E,"L R C Ls Rs Sl Sr",14,N],[13,"Cinema71",E,"L R C Lfe Ls Rs Lc Rc",14,N],[13,"Music71",E,"L R C Lfe Ls Rs Sl Sr",14,N],[13,"Cinema80",E,"L R C Ls Rs Lc Rc Cs",14,N],[13,"Music80",E,"L R C Ls Rs Cs Sl Sr",14,N],[13,"Cinema81",E,"L R C Lfe Ls Rs Lc Rc Cs",14,N],[13,"Music81",E,"L R C Lfe Ls Rs Cs Sl Sr",14,N],[13,"Surround102",E,"L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",14,N],[4,R[139],E,"Used to specify whether functionality is supported.",N,N],[13,"Yes",E,E,15,N],[13,"Maybe",E,E,15,N],[13,"No",E,E,15,N],[4,R[140],E,"Denotes in which thread the host is in.",N,N],[13,"Unknown",E,"Unsupported by host.",16,N],[13,"User",E,"GUI thread.",16,N],[13,"Realtime",E,"Audio process thread.",16,N],[13,"Prefetch",E,"Sequence thread (MIDI, etc).",16,N],[13,"Offline",E,"Offline processing thread (therefore GUI/user thread).",16,N],[4,R[141],E,"Language that the host is using.",N,N],[13,"English",E,E,17,N],[13,"German",E,E,17,N],[13,"French",E,E,17,N],[13,"Italian",E,E,17,N],[13,"Spanish",E,E,17,N],[13,"Japanese",E,E,17,N],[4,R[142],E,"The file operation to perform.",N,N],[13,"Load",E,"Load a file.",18,N],[13,"Save",E,"Save a file.",18,N],[13,"LoadMultipleFiles",E,"Load multiple files simultaneously.",18,N],[13,"SelectDirectory",E,"Choose a directory.",18,N],[4,R[143],E,"Format to select files.",N,N],[13,"Regular",E,"Regular file selector.",19,N],[4,R[144],E,"The type of event that has occured. See…",N,N],[13,"Midi",E,"Midi event. See `api::MidiEvent`.",20,N],[13,"_Audio",E,R[21],20,N],[13,"_Video",E,R[21],20,N],[13,"_Parameter",E,R[21],20,N],[13,"_Trigger",E,R[21],20,N],[13,"SysEx",E,"System exclusive event. See `api::SysExEvent`.",20,N],[4,R[145],E,"SMPTE Frame Rates.",N,N],[13,"Smpte24fps",E,"24 fps",21,N],[13,"Smpte25fps",E,"25 fps",21,N],[13,"Smpte2997fps",E,"29.97 fps",21,N],[13,"Smpte30fps",E,"30 fps",21,N],[13,"Smpte2997dfps",E,"29.97 drop",21,N],[13,"Smpte30dfps",E,"30 drop",21,N],[13,"SmpteFilm16mm",E,"Film 16mm",21,N],[13,"SmpteFilm35mm",E,"Film 35mm",21,N],[13,"Smpte239fps",E,"HDTV: 23.976 fps",21,N],[13,"Smpte249fps",E,"HDTV: 24.976 fps",21,N],[13,"Smpte599fps",E,"HDTV: 59.94 fps",21,N],[13,"Smpte60fps",E,"HDTV: 60 fps",21,N],[0,"consts",E,"Constant values",N,N],[17,"MAX_PRESET_NAME_LEN","vst::api::consts",E,N,N],[17,"MAX_PARAM_STR_LEN",E,E,N,N],[17,"MAX_LABEL",E,E,N,N],[17,"MAX_SHORT_LABEL",E,E,N,N],[17,"MAX_PRODUCT_STR_LEN",E,E,N,N],[17,"MAX_VENDOR_STR_LEN",E,E,N,N],[17,"VST_MAGIC",E,"VST plugins are identified by a magic number. This…",N,N],[6,"PluginMain",R[22],"`VSTPluginMain` function signature.",N,N],[6,"HostCallbackProc",E,"Host callback function passed to plugin. Can be used to…",N,N],[6,"DispatcherProc",E,"Dispatcher function used to process opcodes. Called by host.",N,N],[6,"ProcessProc",E,"Process function used to process 32 bit floating point…",N,N],[6,"ProcessProcF64",E,"Process function used to process 64 bit floating point…",N,N],[6,"SetParameterProc",E,"Callback function used to set parameter values. Called by…",N,N],[6,"GetParameterProc",E,"Callback function used to get parameter values. Called by…",N,N],[11,"get_plugin",E,"Return handle to Plugin object. Only works for plugins…",5,[[["self"]],["box"]]],[11,"drop_plugin",E,"Drop the Plugin object. Only works for plugins created…",5,[[["self"]]]],[11,"from",E,"Create a `Supported` value from an integer if possible.",15,[[["isize"]],[[R[23]],[R[45],[R[23]]]]]],[11,"events",E,"Use this in your impl of process_events() to process the…",9,[[["self"]],["eventiterator"]]],[18,"ACTIVE",E,"Indicates channel is active. Ignored by host.",22,N],[18,"STEREO",E,"Indicates channel is first of stereo pair.",22,N],[18,"SPEAKER",E,"Use channel's specified speaker_arrangement instead of…",22,N],[11,"empty",E,R[25],22,[[],[R[24]]]],[11,"all",E,R[26],22,[[],[R[24]]]],[11,"bits",E,R[28],22,[[["self"]],["i32"]]],[11,R[29],E,R[30],22,[[["i32"]],[[R[45],[R[24]]],[R[24]]]]],[11,R[31],E,R[32],22,[[["i32"]],[R[24]]]],[11,R[4],E,R[33],22,[[["self"]],["bool"]]],[11,R[47],E,R[34],22,[[["self"]],["bool"]]],[11,R[35],E,R[36],22,[[["self"],[R[24]]],["bool"]]],[11,R[37],E,R[38],22,[[["self"],[R[24]]],["bool"]]],[11,R[48],E,R[39],22,[[["self"],[R[24]]]]],[11,R[49],E,R[40],22,[[["self"],[R[24]]]]],[11,R[50],E,R[41],22,[[["self"],[R[24]]]]],[11,"set",E,R[42],22,[[["self"],["bool"],[R[24]]]]],[18,"HAS_EDITOR",E,"Plugin has an editor.",23,N],[18,"CAN_REPLACING",E,"Plugin can process 32 bit audio. (Mandatory in VST 2.4).",23,N],[18,"PROGRAM_CHUNKS",E,"Plugin preset data is handled in formatless chunks.",23,N],[18,"IS_SYNTH",E,"Plugin is a synth.",23,N],[18,"NO_SOUND_IN_STOP",E,"Plugin does not produce sound when all input is silence.",23,N],[18,"CAN_DOUBLE_REPLACING",E,"Supports 64 bit audio processing.",23,N],[11,"empty",E,R[25],23,[[],[R[27]]]],[11,"all",E,R[26],23,[[],[R[27]]]],[11,"bits",E,R[28],23,[[["self"]],["i32"]]],[11,R[29],E,R[30],23,[[["i32"]],[[R[45],[R[27]]],[R[27]]]]],[11,R[31],E,R[32],23,[[["i32"]],[R[27]]]],[11,R[4],E,R[33],23,[[["self"]],["bool"]]],[11,R[47],E,R[34],23,[[["self"]],["bool"]]],[11,R[35],E,R[36],23,[[[R[27]],["self"]],["bool"]]],[11,R[37],E,R[38],23,[[[R[27]],["self"]],["bool"]]],[11,R[48],E,R[39],23,[[["self"],[R[27]]]]],[11,R[49],E,R[40],23,[[["self"],[R[27]]]]],[11,R[50],E,R[41],23,[[["self"],[R[27]]]]],[11,"set",E,R[42],23,[[["self"],[R[27]],["bool"]]]],[18,"SHIFT",E,"Shift key.",24,N],[18,"ALT",E,"Alt key.",24,N],[18,"COMMAND",E,"Control on mac.",24,N],[18,"CONTROL",E,"Command on mac, ctrl on other.",24,N],[11,"empty",E,R[25],24,[[],[R[43]]]],[11,"all",E,R[26],24,[[],[R[43]]]],[11,"bits",E,R[28],24,[[["self"]],["u8"]]],[11,R[29],E,R[30],24,[[["u8"]],[[R[43]],[R[45],[R[43]]]]]],[11,R[31],E,R[32],24,[[["u8"]],[R[43]]]],[11,R[4],E,R[33],24,[[["self"]],["bool"]]],[11,R[47],E,R[34],24,[[["self"]],["bool"]]],[11,R[35],E,R[36],24,[[[R[43]],["self"]],["bool"]]],[11,R[37],E,R[38],24,[[[R[43]],["self"]],["bool"]]],[11,R[48],E,R[39],24,[[[R[43]],["self"]]]],[11,R[49],E,R[40],24,[[[R[43]],["self"]]]],[11,R[50],E,R[41],24,[[[R[43]],["self"]]]],[11,"set",E,R[42],24,[[[R[43]],["self"],["bool"]]]],[18,"REALTIME_EVENT",E,"This event is played live (not in playback from a…",25,N],[11,"empty",E,R[25],25,[[],[R[44]]]],[11,"all",E,R[26],25,[[],[R[44]]]],[11,"bits",E,R[28],25,[[["self"]],["i32"]]],[11,R[29],E,R[30],25,[[["i32"]],[[R[45],[R[44]]],[R[44]]]]],[11,R[31],E,R[32],25,[[["i32"]],[R[44]]]],[11,R[4],E,R[33],25,[[["self"]],["bool"]]],[11,R[47],E,R[34],25,[[["self"]],["bool"]]],[11,R[35],E,R[36],25,[[["self"],[R[44]]],["bool"]]],[11,R[37],E,R[38],25,[[["self"],[R[44]]],["bool"]]],[11,R[48],E,R[39],25,[[["self"],[R[44]]]]],[11,R[49],E,R[40],25,[[["self"],[R[44]]]]],[11,R[50],E,R[41],25,[[["self"],[R[44]]]]],[11,"set",E,R[42],25,[[["self"],["bool"],[R[44]]]]],[18,"TRANSPORT_CHANGED",E,"Indicates that play, cycle or record state has changed.",26,N],[18,"TRANSPORT_PLAYING",E,"Set if Host sequencer is currently playing.",26,N],[18,"TRANSPORT_CYCLE_ACTIVE",E,"Set if Host sequencer is in cycle mode.",26,N],[18,"TRANSPORT_RECORDING",E,"Set if Host sequencer is in record mode.",26,N],[18,"AUTOMATION_WRITING",E,"Set if automation write mode active (record parameter…",26,N],[18,"AUTOMATION_READING",E,"Set if automation read mode active (play parameter changes).",26,N],[18,"NANOSECONDS_VALID",E,"Set if TimeInfo::nanoseconds is valid.",26,N],[18,"PPQ_POS_VALID",E,"Set if TimeInfo::ppq_pos is valid.",26,N],[18,"TEMPO_VALID",E,"Set if TimeInfo::tempo is valid.",26,N],[18,"BARS_VALID",E,"Set if TimeInfo::bar_start_pos is valid.",26,N],[18,"CYCLE_POS_VALID",E,"Set if both TimeInfo::cycle_start_pos and…",26,N],[18,"TIME_SIG_VALID",E,"Set if both TimeInfo::time_sig_numerator and…",26,N],[18,"SMPTE_VALID",E,"Set if both TimeInfo::smpte_offset and…",26,N],[18,"VST_CLOCK_VALID",E,"Set if TimeInfo::samples_to_next_clock is valid.",26,N],[11,"empty",E,R[25],26,[[],[R[46]]]],[11,"all",E,R[26],26,[[],[R[46]]]],[11,"bits",E,R[28],26,[[["self"]],["i32"]]],[11,R[29],E,R[30],26,[[["i32"]],[[R[46]],[R[45],[R[46]]]]]],[11,R[31],E,R[32],26,[[["i32"]],[R[46]]]],[11,R[4],E,R[33],26,[[["self"]],["bool"]]],[11,R[47],E,R[34],26,[[["self"]],["bool"]]],[11,R[35],E,R[36],26,[[["self"],[R[46]]],["bool"]]],[11,R[37],E,R[38],26,[[["self"],[R[46]]],["bool"]]],[11,R[48],E,R[39],26,[[["self"],[R[46]]]]],[11,R[49],E,R[40],26,[[["self"],[R[46]]]]],[11,R[50],E,R[41],26,[[["self"],[R[46]]]]],[11,"set",E,R[42],26,[[["self"],["bool"],[R[46]]]]],[0,"editor","vst","All VST plugin editor related functionality.",N,N],[3,"KeyCode",R[90],"A platform independent key code. Includes modifier keys.",N,N],[12,"character",E,"ASCII character for key pressed (if applicable).",27,N],[12,"key",E,"Key pressed. See `enums::Key`.",27,N],[12,"modifier",E,"Modifier key bitflags. See `enums::flags::modifier_key`.",27,N],[4,"KnobMode",E,"Allows host to set how a parameter knob works.",N,N],[13,"Circular",E,E,28,N],[13,"CircularRelative",E,E,28,N],[13,"Linear",E,E,28,N],[4,"Key",E,"Platform independent key codes.",N,N],[13,"Back",E,E,29,N],[13,"Tab",E,E,29,N],[13,"Clear",E,E,29,N],[13,"Return",E,E,29,N],[13,"Pause",E,E,29,N],[13,"Escape",E,E,29,N],[13,"Space",E,E,29,N],[13,"Next",E,E,29,N],[13,"End",E,E,29,N],[13,"Home",E,E,29,N],[13,"Left",E,E,29,N],[13,"Up",E,E,29,N],[13,"Right",E,E,29,N],[13,"Down",E,E,29,N],[13,"PageUp",E,E,29,N],[13,"PageDown",E,E,29,N],[13,"Select",E,E,29,N],[13,"Print",E,E,29,N],[13,"Enter",E,E,29,N],[13,"Snapshot",E,E,29,N],[13,"Insert",E,E,29,N],[13,"Delete",E,E,29,N],[13,"Help",E,E,29,N],[13,"Numpad0",E,E,29,N],[13,"Numpad1",E,E,29,N],[13,"Numpad2",E,E,29,N],[13,"Numpad3",E,E,29,N],[13,"Numpad4",E,E,29,N],[13,"Numpad5",E,E,29,N],[13,"Numpad6",E,E,29,N],[13,"Numpad7",E,E,29,N],[13,"Numpad8",E,E,29,N],[13,"Numpad9",E,E,29,N],[13,"Multiply",E,E,29,N],[13,"Add",E,E,29,N],[13,"Separator",E,E,29,N],[13,"Subtract",E,E,29,N],[13,"Decimal",E,E,29,N],[13,"Divide",E,E,29,N],[13,"F1",E,E,29,N],[13,"F2",E,E,29,N],[13,"F3",E,E,29,N],[13,"F4",E,E,29,N],[13,"F5",E,E,29,N],[13,"F6",E,E,29,N],[13,"F7",E,E,29,N],[13,"F8",E,E,29,N],[13,"F9",E,E,29,N],[13,"F10",E,E,29,N],[13,"F11",E,E,29,N],[13,"F12",E,E,29,N],[13,"Numlock",E,E,29,N],[13,"Scroll",E,E,29,N],[13,"Shift",E,E,29,N],[13,"Control",E,E,29,N],[13,"Alt",E,E,29,N],[13,"Equals",E,E,29,N],[8,"Editor",E,"Implemented by plugin editors.",N,N],[10,"size",E,"Get the size of the editor window.",30,[[["self"]]]],[10,"position",E,"Get the coordinates of the editor window.",30,[[["self"]]]],[11,"idle",E,"Editor idle call. Called by host.",30,[[["self"]]]],[11,"close",E,"Called when the editor window is closed.",30,[[["self"]]]],[10,"open",E,"Called when the editor window is opened.",30,[[["self"]],["bool"]]],[10,"is_open",E,"Return whether the window is currently open.",30,[[["self"]],["bool"]]],[11,"set_knob_mode",E,"Set the knob mode for this editor (if supported by host).",30,[[["self"],[R[114]]],["bool"]]],[11,"key_up",E,"Receive key up event. Return `true` if the key was used.",30,[[["keycode"],["self"]],["bool"]]],[11,"key_down",E,"Receive key down event. Return `true` if the key was used.",30,[[["keycode"],["self"]],["bool"]]],[0,"channels","vst","Meta data for dealing with input / output channels. Not…",N,N],[3,R[155],R[91],"Information about an input / output channel. This isn't…",N,N],[4,R[151],E,"Target for Speaker arrangement type. Can be a cinema…",N,N],[13,"Music",E,"Music arrangement. Technically identical to Cinema.",31,N],[13,"Cinema",E,"Cinematic arrangement. Technically identical to Music.",31,N],[4,R[152],E,"An enum for all channels in a stereo configuration.",N,N],[13,"Left",E,"Left channel.",32,N],[13,"Right",E,"Right channel.",32,N],[4,R[153],E,"Possible stereo speaker configurations.",N,N],[13,"L_R",E,"Regular.",33,N],[13,"Ls_Rs",E,"Left surround, right surround.",33,N],[13,"Lc_Rc",E,"Left center, right center.",33,N],[13,"Sl_Sr",E,"Side left, side right.",33,N],[13,"C_Lfe",E,"Center, low frequency effects.",33,N],[4,R[154],E,"Possible surround speaker configurations.",N,N],[13,"S3_0",E,"3.0 surround sound. Cinema: L R C Music: L R S",34,N],[13,"S3_1",E,"3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",34,N],[13,"S4_0",E,"4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",34,N],[13,"S4_1",E,"4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",34,N],[13,"S5_0",E,"5.0 surround sound. Cinema and music: L R C Ls Rs",34,N],[13,"S5_1",E,"5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",34,N],[13,"S6_0",E,"6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",34,N],[13,"S6_1",E,"6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",34,N],[13,"S7_0",E,"7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",34,N],[13,"S7_1",E,"7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",34,N],[13,"S8_0",E,"8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",34,N],[13,"S8_1",E,"8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",34,N],[13,"S10_2",E,"10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",34,N],[4,R[51],E,"Type representing how a channel is used. Only useful for…",N,N],[13,"Custom",E,"Custom arrangement not specified to host.",35,N],[13,"Empty",E,R[52],35,N],[13,"Mono",E,"Mono channel.",35,N],[13,"Stereo",E,"Stereo channel. Contains type of stereo arrangement and…",35,N],[13,"Surround",E,"Surround channel. Contains surround arrangement and target…",35,N],[11,"new",E,"Construct a new `ChannelInfo` object.",36,[[[R[53]],[R[74]],[R[45],[R[74]]],["bool"],[R[45],[R[53]]]],[R[73]]]],[11,"is_speaker_type",E,"Determine whether this channel is part of a surround…",35,[[["self"]],["bool"]]],[11,"is_left_stereo",E,"Determine whether this channel is the left speaker in a…",35,[[["self"]],["bool"]]],[0,"event","vst","Interfaces to VST events.",N,N],[3,R[54],R[92],R[55],N,N],[12,"data",E,"The raw midi data associated with this event.",37,N],[12,R[15],E,R[16],37,N],[12,"live",E,"This midi event was created live as opposed to being…",37,N],[12,R[56],E,"The length of the midi note associated with this event, if…",37,N],[12,R[57],E,"Offset in samples into note from note start, if available.",37,N],[12,"detune",E,"Detuning between -63 and +64 cents.",37,N],[12,R[58],E,R[59],37,N],[3,R[60],E,R[61],N,N],[12,"payload",E,"The SysEx payload.",38,N],[12,R[15],E,R[16],38,N],[4,"Event",E,"A VST event.",N,N],[13,"Midi",E,R[55],39,N],[13,"SysEx",E,R[61],39,N],[13,"Deprecated",E,"A deprecated event.",39,N],[0,"host","vst","Host specific structures.",N,N],[3,R[157],R[93],"Wrapper for an externally loaded VST plugin.",N,N],[3,R[166],E,"An instance of an externally loaded VST plugin.",N,N],[3,R[158],E,"Used for constructing `AudioBuffer` instances on the host.",N,N],[4,R[156],E,"All possible errors that can occur when loading a VST…",N,N],[13,"InvalidPath",E,"Could not load given path.",40,N],[13,"NotAPlugin",E,"Given path is not a VST plugin.",40,N],[13,"InstanceFailed",E,"Failed to create an instance of this plugin.",40,N],[13,"InvalidApiVersion",E,"The API version which the plugin used is not supported by…",40,N],[8,"Host",E,"Implemented by all VST hosts.",N,N],[11,R[98],E,"Automate a parameter; the value has been changed.",41,[[["i32"],["self"],["f32"]]]],[11,R[99],E,"Get the plugin ID of the currently loading plugin.",41,[[["self"]],["i32"]]],[11,"idle",E,"An idle call.",41,[[["self"]]]],[11,R[69],E,"Get vendor and product information.",41,[[["self"]]]],[11,R[71],E,"Handle incoming events from the plugin.",41,[[["events"],["self"]]]],[11,R[100],E,"Get time information.",41,[[["i32"],["self"]],[[R[45],[R[62]]],[R[62]]]]],[11,R[101],E,R[102],41,[[["self"]],["isize"]]],[11,"load",E,"Load a plugin at the given path with the given host.",42,[[["arc",["mutex"]],["path"],["mutex"]],[[R[81],[R[64],R[63]]],[R[63]],[R[64]]]]],[11,"instance",E,"Try to create an instance of this VST plugin.",42,[[["self"]],[[R[63]],[R[81],[R[65],R[63]]],[R[65]]]]],[11,"new",E,"Create a `HostBuffer` for a given number of input and…",43,[[[R[0]]],[R[66]]]],[11,"from_info",E,"Create a `HostBuffer` for the number of input and output…",43,[[["info"]],[R[66]]]],[11,"bind",E,"Bind sample arrays to the `HostBuffer` to create an…",43,[[["self"]],[R[70]]]],[11,R[67],E,"Number of input channels supported by this `HostBuffer`.",43,[[["self"]],[R[0]]]],[11,R[68],E,"Number of output channels supported by this `HostBuffer`.",43,[[["self"]],[R[0]]]],[0,"plugin","vst","Plugin specific structures.",N,N],[3,"Info",R[94],"A structure representing static plugin information.",N,N],[12,"name",E,"Plugin Name.",44,N],[12,"vendor",E,"Plugin Vendor.",44,N],[12,"presets",E,"Number of different presets.",44,N],[12,"parameters",E,"Number of parameters.",44,N],[12,"inputs",E,"Number of inputs.",44,N],[12,"outputs",E,"Number of outputs.",44,N],[12,"midi_inputs",E,"Number of MIDI input channels (1-16), or 0 for the default…",44,N],[12,"midi_outputs",E,"Number of MIDI output channels (1-16), or 0 for the…",44,N],[12,"unique_id",E,"Unique plugin ID. Can be registered with Steinberg to…",44,N],[12,"version",E,"Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",44,N],[12,R[116],E,"Plugin category. Possible values are found in…",44,N],[12,"initial_delay",E,"Latency of the plugin in samples.",44,N],[12,"preset_chunks",E,"Indicates that preset data is handled in formatless chunks.",44,N],[12,"f64_precision",E,"Indicates whether this plugin can process f64 based…",44,N],[12,"silent_when_stopped",E,"If this is true, the plugin will not produce sound when…",44,N],[3,R[160],E,"A reference to the host which allows the plugin to call…",N,N],[4,"Category",E,"Plugin type. Generally either Effect or Synth.",N,N],[13,"Unknown",E,"Unknown / not implemented",45,N],[13,"Effect",E,"Any effect",45,N],[13,"Synth",E,"VST instrument",45,N],[13,"Analysis",E,"Scope, tuner, spectrum analyser, etc.",45,N],[13,"Mastering",E,"Dynamics, etc.",45,N],[13,"Spacializer",E,"Panners, etc.",45,N],[13,"RoomFx",E,"Delays and Reverbs",45,N],[13,"SurroundFx",E,"Dedicated surround processor.",45,N],[13,"Restoration",E,"Denoiser, etc.",45,N],[13,"OfflineProcess",E,"Offline processing.",45,N],[13,"Shell",E,"Contains other plugins.",45,N],[13,"Generator",E,"Tone generator, etc.",45,N],[4,"CanDo",E,"Features which are optionally supported by a plugin. These…",N,N],[13,"SendEvents",E,E,46,N],[13,"SendMidiEvent",E,E,46,N],[13,"ReceiveEvents",E,E,46,N],[13,"ReceiveMidiEvent",E,E,46,N],[13,"ReceiveTimeInfo",E,E,46,N],[13,"Offline",E,E,46,N],[13,"MidiProgramNames",E,E,46,N],[13,"Bypass",E,E,46,N],[13,"ReceiveSysExEvent",E,E,46,N],[13,"MidiSingleNoteTuningChange",E,E,46,N],[13,"MidiKeyBasedInstrumentControl",E,E,46,N],[13,"Other",E,E,46,N],[8,"Plugin",E,"Must be implemented by all VST plugins.",N,N],[10,R[69],E,"This method must return an `Info` struct.",47,[[["self"]],["info"]]],[11,"new",E,"Called during initialization to pass a `HostCallback` to…",47,[[[R[112]]],["self"]]],[11,"init",E,"Called when plugin is fully initialized.",47,[[["self"]]]],[11,R[103],E,"Called when sample rate is changed by host.",47,[[["self"],["f32"]]]],[11,R[104],E,"Called when block size is changed by host.",47,[[["self"],["i64"]]]],[11,"resume",E,"Called to transition the plugin into the resumed state.",47,[[["self"]]]],[11,"suspend",E,"Called to transition the plugin into the suspended state.",47,[[["self"]]]],[11,R[105],E,"Vendor specific handling.",47,[[["i32"],["isize"],["self"],["f32"]],["isize"]]],[11,"can_do",E,"Return whether plugin supports specified action.",47,[[["cando"],["self"]],[R[23]]]],[11,R[106],E,"Get the tail size of plugin when it is stopped. Used in…",47,[[["self"]],["isize"]]],[11,"process",E,"Process an audio buffer containing `f32` values.",47,[[["self"],[R[70]]]]],[11,R[107],E,"Process an audio buffer containing `f64` values.",47,[[[R[70]],["self"]]]],[11,R[71],E,"Handle incoming events sent from the host.",47,[[["self"],["events"]]]],[11,R[110],E,"Get a reference to the shared parameter object.",47,[[["self"]],[[R[72]],["arc",[R[72]]]]]],[11,R[108],E,"Get information about an input channel. Only used by some…",47,[[["i32"],["self"]],[R[73]]]],[11,R[109],E,"Get information about an output channel. Only used by some…",47,[[["i32"],["self"]],[R[73]]]],[11,"start_process",E,"Called one time before the start of process call. This…",47,[[["self"]]]],[11,"stop_process",E,"Called after the stop of process call.",47,[[["self"]]]],[11,"get_editor",E,"Return handle to plugin editor if supported. The method…",47,[[["self"]],[["box",["editor"]],[R[45],["box"]]]]],[8,R[159],E,"Parameter object shared between the UI and processing…",N,N],[11,"change_preset",E,"Set the current preset to the index specified by `preset`.",48,[[["i32"],["self"]]]],[11,"get_preset_num",E,"Get the current preset index.",48,[[["self"]],["i32"]]],[11,"set_preset_name",E,"Set the current preset name.",48,[[[R[74]],["self"]]]],[11,"get_preset_name",E,"Get the name of the preset at the index specified by…",48,[[["i32"],["self"]],[R[74]]]],[11,"get_parameter_label",E,"Get parameter label for parameter at `index` (e.g. \"db\",…",48,[[["i32"],["self"]],[R[74]]]],[11,"get_parameter_text",E,"Get the parameter value for parameter at `index` (e.g.…",48,[[["i32"],["self"]],[R[74]]]],[11,"get_parameter_name",E,"Get the name of parameter at `index`.",48,[[["i32"],["self"]],[R[74]]]],[11,R[78],E,"Get the value of paramater at `index`. Should be value…",48,[[["i32"],["self"]],["f32"]]],[11,R[77],E,"Set the value of parameter at `index`. `value` is between…",48,[[["i32"],["self"],["f32"]]]],[11,"can_be_automated",E,"Return whether parameter at `index` can be automated.",48,[[["i32"],["self"]],["bool"]]],[11,"string_to_parameter",E,"Use String as input for parameter value. Used by host to…",48,[[[R[74]],["i32"],["self"]],["bool"]]],[11,"get_preset_data",E,R[75],48,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_bank_data",E,R[75],48,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"load_preset_data",E,R[75],48,[[["self"]]]],[11,"load_bank_data",E,R[75],48,[[["self"]]]],[11,"from_str",E,"Converts a string to a `CanDo` instance. Any given string…",46,[[["str"]],["cando"]]],[11,"vst_version",E,"Get the VST API version supported by the host e.g. `2400 =…",49,[[["self"]],["i32"]]],[11,"raw_callback",E,"Get the callback for calling host-specific extensions",49,[[["self"]],[[R[76]],[R[45],[R[76]]]]]],[11,"raw_effect",E,"Get the effect pointer for calling host-specific extensions",49,[[["self"]]]],[0,"util","vst","Structures for easing the implementation of VST plugins.",N,N],[3,R[161],R[95],"Simple atomic floating point variable with relaxed ordering.",N,N],[3,R[162],E,"A set of parameters that can be shared between threads.",N,N],[3,R[167],E,"An iterator over changed parameters. Returned by `iterate`.",N,N],[11,"new",E,"New atomic float with initial value `value`.",50,[[["f32"]],["atomicfloat"]]],[11,"get",E,"Get the current value of the atomic float.",50,[[["self"]],["f32"]]],[11,"set",E,"Set the value of the atomic float to `value`.",50,[[["self"],["f32"]]]],[11,"new",E,"Create a new parameter set with `parameter_count`…",51,[[[R[0]]],["self"]]],[11,R[77],E,"Set the value of the parameter with index `index` to…",51,[[["self"],["f32"],[R[0]]]]],[11,R[78],E,"Get the current value of the parameter with index `index`.",51,[[["self"],[R[0]]],["f32"]]],[11,"iterate",E,"Iterate over all parameters marked as changed. If…",51,[[["self"],["bool"]],["parametertransferiterator"]]],[14,"plugin_main","vst","Exports the necessary symbols for the plugin to be used by…",N,N],[11,"from",R[79],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[80],E,E,1,[[[U]],[R[81]]]],[11,R[88],E,E,1,[[["self"]],[T]]],[11,R[85],E,E,1,[[["self"]],[R[89]]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[],[R[81]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[84],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[86],E,E,2,[[["self"]],[T]]],[11,R[87],E,E,2,[[[T],["self"]]]],[11,R[80],E,E,2,[[[U]],[R[81]]]],[11,R[88],E,E,2,[[["self"]],[T]]],[11,R[85],E,E,2,[[["self"]],[R[89]]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[],[R[81]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[84],E,E,52,[[],["i"]]],[11,"into",E,E,52,[[],[U]]],[11,R[80],E,E,52,[[[U]],[R[81]]]],[11,R[88],E,E,52,[[["self"]],[T]]],[11,R[85],E,E,52,[[["self"]],[R[89]]]],[11,R[82],E,E,52,[[["self"]],[T]]],[11,R[83],E,E,52,[[],[R[81]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[84],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[86],E,E,3,[[["self"]],[T]]],[11,R[87],E,E,3,[[[T],["self"]]]],[11,R[80],E,E,3,[[[U]],[R[81]]]],[11,R[88],E,E,3,[[["self"]],[T]]],[11,R[85],E,E,3,[[["self"]],[R[89]]]],[11,R[82],E,E,3,[[["self"]],[T]]],[11,R[83],E,E,3,[[],[R[81]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[84],E,E,53,[[],["i"]]],[11,"into",E,E,53,[[],[U]]],[11,R[80],E,E,53,[[[U]],[R[81]]]],[11,R[88],E,E,53,[[["self"]],[T]]],[11,R[85],E,E,53,[[["self"]],[R[89]]]],[11,R[82],E,E,53,[[["self"]],[T]]],[11,R[83],E,E,53,[[],[R[81]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[80],E,E,4,[[[U]],[R[81]]]],[11,R[88],E,E,4,[[["self"]],[T]]],[11,R[85],E,E,4,[[["self"]],[R[89]]]],[11,R[82],E,E,4,[[["self"]],[T]]],[11,R[83],E,E,4,[[],[R[81]]]],[11,"from",R[22],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[80],E,E,5,[[[U]],[R[81]]]],[11,R[88],E,E,5,[[["self"]],[T]]],[11,R[85],E,E,5,[[["self"]],[R[89]]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[],[R[81]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[80],E,E,6,[[[U]],[R[81]]]],[11,R[88],E,E,6,[[["self"]],[T]]],[11,R[85],E,E,6,[[["self"]],[R[89]]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[],[R[81]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[80],E,E,7,[[[U]],[R[81]]]],[11,R[88],E,E,7,[[["self"]],[T]]],[11,R[85],E,E,7,[[["self"]],[R[89]]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[],[R[81]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[80],E,E,8,[[[U]],[R[81]]]],[11,R[88],E,E,8,[[["self"]],[T]]],[11,R[85],E,E,8,[[["self"]],[R[89]]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[],[R[81]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[80],E,E,9,[[[U]],[R[81]]]],[11,R[88],E,E,9,[[["self"]],[T]]],[11,R[85],E,E,9,[[["self"]],[R[89]]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[],[R[81]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[84],E,E,54,[[],["i"]]],[11,"into",E,E,54,[[],[U]]],[11,R[80],E,E,54,[[[U]],[R[81]]]],[11,R[88],E,E,54,[[["self"]],[T]]],[11,R[85],E,E,54,[[["self"]],[R[89]]]],[11,R[82],E,E,54,[[["self"]],[T]]],[11,R[83],E,E,54,[[],[R[81]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[86],E,E,10,[[["self"]],[T]]],[11,R[87],E,E,10,[[[T],["self"]]]],[11,R[80],E,E,10,[[[U]],[R[81]]]],[11,R[88],E,E,10,[[["self"]],[T]]],[11,R[85],E,E,10,[[["self"]],[R[89]]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[],[R[81]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[80],E,E,11,[[[U]],[R[81]]]],[11,R[88],E,E,11,[[["self"]],[T]]],[11,R[85],E,E,11,[[["self"]],[R[89]]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[],[R[81]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[86],E,E,12,[[["self"]],[T]]],[11,R[87],E,E,12,[[[T],["self"]]]],[11,R[80],E,E,12,[[[U]],[R[81]]]],[11,R[88],E,E,12,[[["self"]],[T]]],[11,R[85],E,E,12,[[["self"]],[R[89]]]],[11,R[82],E,E,12,[[["self"]],[T]]],[11,R[83],E,E,12,[[],[R[81]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[86],E,E,13,[[["self"]],[T]]],[11,R[87],E,E,13,[[[T],["self"]]]],[11,R[80],E,E,13,[[[U]],[R[81]]]],[11,R[88],E,E,13,[[["self"]],[T]]],[11,R[85],E,E,13,[[["self"]],[R[89]]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[],[R[81]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[86],E,E,22,[[["self"]],[T]]],[11,R[87],E,E,22,[[[T],["self"]]]],[11,R[80],E,E,22,[[[U]],[R[81]]]],[11,R[88],E,E,22,[[["self"]],[T]]],[11,R[85],E,E,22,[[["self"]],[R[89]]]],[11,R[82],E,E,22,[[["self"]],[T]]],[11,R[83],E,E,22,[[],[R[81]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[86],E,E,23,[[["self"]],[T]]],[11,R[87],E,E,23,[[[T],["self"]]]],[11,R[80],E,E,23,[[[U]],[R[81]]]],[11,R[88],E,E,23,[[["self"]],[T]]],[11,R[85],E,E,23,[[["self"]],[R[89]]]],[11,R[82],E,E,23,[[["self"]],[T]]],[11,R[83],E,E,23,[[],[R[81]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[86],E,E,24,[[["self"]],[T]]],[11,R[87],E,E,24,[[[T],["self"]]]],[11,R[80],E,E,24,[[[U]],[R[81]]]],[11,R[88],E,E,24,[[["self"]],[T]]],[11,R[85],E,E,24,[[["self"]],[R[89]]]],[11,R[82],E,E,24,[[["self"]],[T]]],[11,R[83],E,E,24,[[],[R[81]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[86],E,E,25,[[["self"]],[T]]],[11,R[87],E,E,25,[[[T],["self"]]]],[11,R[80],E,E,25,[[[U]],[R[81]]]],[11,R[88],E,E,25,[[["self"]],[T]]],[11,R[85],E,E,25,[[["self"]],[R[89]]]],[11,R[82],E,E,25,[[["self"]],[T]]],[11,R[83],E,E,25,[[],[R[81]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[86],E,E,26,[[["self"]],[T]]],[11,R[87],E,E,26,[[[T],["self"]]]],[11,R[80],E,E,26,[[[U]],[R[81]]]],[11,R[88],E,E,26,[[["self"]],[T]]],[11,R[85],E,E,26,[[["self"]],[R[89]]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[],[R[81]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[86],E,E,14,[[["self"]],[T]]],[11,R[87],E,E,14,[[[T],["self"]]]],[11,R[80],E,E,14,[[[U]],[R[81]]]],[11,R[88],E,E,14,[[["self"]],[T]]],[11,R[85],E,E,14,[[["self"]],[R[89]]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[],[R[81]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[80],E,E,15,[[[U]],[R[81]]]],[11,R[88],E,E,15,[[["self"]],[T]]],[11,R[85],E,E,15,[[["self"]],[R[89]]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[],[R[81]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[80],E,E,16,[[[U]],[R[81]]]],[11,R[88],E,E,16,[[["self"]],[T]]],[11,R[85],E,E,16,[[["self"]],[R[89]]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[],[R[81]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[80],E,E,17,[[[U]],[R[81]]]],[11,R[88],E,E,17,[[["self"]],[T]]],[11,R[85],E,E,17,[[["self"]],[R[89]]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[],[R[81]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[80],E,E,18,[[[U]],[R[81]]]],[11,R[88],E,E,18,[[["self"]],[T]]],[11,R[85],E,E,18,[[["self"]],[R[89]]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[],[R[81]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[80],E,E,19,[[[U]],[R[81]]]],[11,R[88],E,E,19,[[["self"]],[T]]],[11,R[85],E,E,19,[[["self"]],[R[89]]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[],[R[81]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[86],E,E,20,[[["self"]],[T]]],[11,R[87],E,E,20,[[[T],["self"]]]],[11,R[80],E,E,20,[[[U]],[R[81]]]],[11,R[88],E,E,20,[[["self"]],[T]]],[11,R[85],E,E,20,[[["self"]],[R[89]]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[],[R[81]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[86],E,E,21,[[["self"]],[T]]],[11,R[87],E,E,21,[[[T],["self"]]]],[11,R[80],E,E,21,[[[U]],[R[81]]]],[11,R[88],E,E,21,[[["self"]],[T]]],[11,R[85],E,E,21,[[["self"]],[R[89]]]],[11,R[82],E,E,21,[[["self"]],[T]]],[11,R[83],E,E,21,[[],[R[81]]]],[11,"from",R[90],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[86],E,E,27,[[["self"]],[T]]],[11,R[87],E,E,27,[[[T],["self"]]]],[11,R[80],E,E,27,[[[U]],[R[81]]]],[11,R[88],E,E,27,[[["self"]],[T]]],[11,R[85],E,E,27,[[["self"]],[R[89]]]],[11,R[82],E,E,27,[[["self"]],[T]]],[11,R[83],E,E,27,[[],[R[81]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[86],E,E,28,[[["self"]],[T]]],[11,R[87],E,E,28,[[[T],["self"]]]],[11,R[80],E,E,28,[[[U]],[R[81]]]],[11,R[88],E,E,28,[[["self"]],[T]]],[11,R[85],E,E,28,[[["self"]],[R[89]]]],[11,R[82],E,E,28,[[["self"]],[T]]],[11,R[83],E,E,28,[[],[R[81]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[86],E,E,29,[[["self"]],[T]]],[11,R[87],E,E,29,[[[T],["self"]]]],[11,R[80],E,E,29,[[[U]],[R[81]]]],[11,R[88],E,E,29,[[["self"]],[T]]],[11,R[85],E,E,29,[[["self"]],[R[89]]]],[11,R[82],E,E,29,[[["self"]],[T]]],[11,R[83],E,E,29,[[],[R[81]]]],[11,"from",R[91],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[80],E,E,36,[[[U]],[R[81]]]],[11,R[88],E,E,36,[[["self"]],[T]]],[11,R[85],E,E,36,[[["self"]],[R[89]]]],[11,R[82],E,E,36,[[["self"]],[T]]],[11,R[83],E,E,36,[[],[R[81]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[80],E,E,31,[[[U]],[R[81]]]],[11,R[88],E,E,31,[[["self"]],[T]]],[11,R[85],E,E,31,[[["self"]],[R[89]]]],[11,R[82],E,E,31,[[["self"]],[T]]],[11,R[83],E,E,31,[[],[R[81]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[80],E,E,32,[[[U]],[R[81]]]],[11,R[88],E,E,32,[[["self"]],[T]]],[11,R[85],E,E,32,[[["self"]],[R[89]]]],[11,R[82],E,E,32,[[["self"]],[T]]],[11,R[83],E,E,32,[[],[R[81]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[80],E,E,33,[[[U]],[R[81]]]],[11,R[88],E,E,33,[[["self"]],[T]]],[11,R[85],E,E,33,[[["self"]],[R[89]]]],[11,R[82],E,E,33,[[["self"]],[T]]],[11,R[83],E,E,33,[[],[R[81]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[80],E,E,34,[[[U]],[R[81]]]],[11,R[88],E,E,34,[[["self"]],[T]]],[11,R[85],E,E,34,[[["self"]],[R[89]]]],[11,R[82],E,E,34,[[["self"]],[T]]],[11,R[83],E,E,34,[[],[R[81]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[80],E,E,35,[[[U]],[R[81]]]],[11,R[88],E,E,35,[[["self"]],[T]]],[11,R[85],E,E,35,[[["self"]],[R[89]]]],[11,R[82],E,E,35,[[["self"]],[T]]],[11,R[83],E,E,35,[[],[R[81]]]],[11,"from",R[92],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[86],E,E,37,[[["self"]],[T]]],[11,R[87],E,E,37,[[[T],["self"]]]],[11,R[80],E,E,37,[[[U]],[R[81]]]],[11,R[88],E,E,37,[[["self"]],[T]]],[11,R[85],E,E,37,[[["self"]],[R[89]]]],[11,R[82],E,E,37,[[["self"]],[T]]],[11,R[83],E,E,37,[[],[R[81]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[86],E,E,38,[[["self"]],[T]]],[11,R[87],E,E,38,[[[T],["self"]]]],[11,R[80],E,E,38,[[[U]],[R[81]]]],[11,R[88],E,E,38,[[["self"]],[T]]],[11,R[85],E,E,38,[[["self"]],[R[89]]]],[11,R[82],E,E,38,[[["self"]],[T]]],[11,R[83],E,E,38,[[],[R[81]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[86],E,E,39,[[["self"]],[T]]],[11,R[87],E,E,39,[[[T],["self"]]]],[11,R[80],E,E,39,[[[U]],[R[81]]]],[11,R[88],E,E,39,[[["self"]],[T]]],[11,R[85],E,E,39,[[["self"]],[R[89]]]],[11,R[82],E,E,39,[[["self"]],[T]]],[11,R[83],E,E,39,[[],[R[81]]]],[11,"from",R[93],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[80],E,E,42,[[[U]],[R[81]]]],[11,R[88],E,E,42,[[["self"]],[T]]],[11,R[85],E,E,42,[[["self"]],[R[89]]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[],[R[81]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[80],E,E,55,[[[U]],[R[81]]]],[11,R[88],E,E,55,[[["self"]],[T]]],[11,R[85],E,E,55,[[["self"]],[R[89]]]],[11,R[82],E,E,55,[[["self"]],[T]]],[11,R[83],E,E,55,[[],[R[81]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[80],E,E,43,[[[U]],[R[81]]]],[11,R[88],E,E,43,[[["self"]],[T]]],[11,R[85],E,E,43,[[["self"]],[R[89]]]],[11,R[82],E,E,43,[[["self"]],[T]]],[11,R[83],E,E,43,[[],[R[81]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"to_string",E,E,40,[[["self"]],[R[74]]]],[11,R[80],E,E,40,[[[U]],[R[81]]]],[11,R[88],E,E,40,[[["self"]],[T]]],[11,R[85],E,E,40,[[["self"]],[R[89]]]],[11,R[82],E,E,40,[[["self"]],[T]]],[11,R[83],E,E,40,[[],[R[81]]]],[11,"from",R[94],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[86],E,E,44,[[["self"]],[T]]],[11,R[87],E,E,44,[[[T],["self"]]]],[11,R[80],E,E,44,[[[U]],[R[81]]]],[11,R[88],E,E,44,[[["self"]],[T]]],[11,R[85],E,E,44,[[["self"]],[R[89]]]],[11,R[82],E,E,44,[[["self"]],[T]]],[11,R[83],E,E,44,[[],[R[81]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[86],E,E,49,[[["self"]],[T]]],[11,R[87],E,E,49,[[[T],["self"]]]],[11,R[80],E,E,49,[[[U]],[R[81]]]],[11,R[88],E,E,49,[[["self"]],[T]]],[11,R[85],E,E,49,[[["self"]],[R[89]]]],[11,R[82],E,E,49,[[["self"]],[T]]],[11,R[83],E,E,49,[[],[R[81]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[86],E,E,45,[[["self"]],[T]]],[11,R[87],E,E,45,[[[T],["self"]]]],[11,R[80],E,E,45,[[[U]],[R[81]]]],[11,R[88],E,E,45,[[["self"]],[T]]],[11,R[85],E,E,45,[[["self"]],[R[89]]]],[11,R[82],E,E,45,[[["self"]],[T]]],[11,R[83],E,E,45,[[],[R[81]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[80],E,E,46,[[[U]],[R[81]]]],[11,R[88],E,E,46,[[["self"]],[T]]],[11,R[85],E,E,46,[[["self"]],[R[89]]]],[11,R[82],E,E,46,[[["self"]],[T]]],[11,R[83],E,E,46,[[],[R[81]]]],[11,"from",R[95],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[80],E,E,50,[[[U]],[R[81]]]],[11,R[88],E,E,50,[[["self"]],[T]]],[11,R[85],E,E,50,[[["self"]],[R[89]]]],[11,R[82],E,E,50,[[["self"]],[T]]],[11,R[83],E,E,50,[[],[R[81]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[80],E,E,51,[[[U]],[R[81]]]],[11,R[88],E,E,51,[[["self"]],[T]]],[11,R[85],E,E,51,[[["self"]],[R[89]]]],[11,R[82],E,E,51,[[["self"]],[T]]],[11,R[83],E,E,51,[[],[R[81]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[84],E,E,56,[[],["i"]]],[11,"into",E,E,56,[[],[U]]],[11,R[80],E,E,56,[[[U]],[R[81]]]],[11,R[88],E,E,56,[[["self"]],[T]]],[11,R[85],E,E,56,[[["self"]],[R[89]]]],[11,R[82],E,E,56,[[["self"]],[T]]],[11,R[83],E,E,56,[[],[R[81]]]],[11,R[96],R[92],E,37,[[[R[97]],["self"]]]],[11,R[96],E,E,38,[[[R[97]],["self"]]]],[11,R[96],E,E,39,[[[R[97]],["self"]]]],[11,R[98],R[94],E,49,[[["i32"],["self"],["f32"]]]],[11,R[99],E,E,49,[[["self"]],["i32"]]],[11,"idle",E,E,49,[[["self"]]]],[11,R[69],E,E,49,[[["self"]]]],[11,R[71],E,"Send events to the host.",49,[[["events"],["self"]]]],[11,R[100],E,"Request time information from Host.",49,[[["i32"],["self"]],[[R[45],[R[62]]],[R[62]]]]],[11,R[101],E,R[102],49,[[["self"]],["isize"]]],[11,R[69],R[93],E,55,[[["self"]],["info"]]],[11,"init",E,E,55,[[["self"]]]],[11,R[103],E,E,55,[[["self"],["f32"]]]],[11,R[104],E,E,55,[[["self"],["i64"]]]],[11,"resume",E,E,55,[[["self"]]]],[11,"suspend",E,E,55,[[["self"]]]],[11,R[105],E,E,55,[[["i32"],["isize"],["self"],["f32"]],["isize"]]],[11,"can_do",E,E,55,[[["cando"],["self"]],[R[23]]]],[11,R[106],E,E,55,[[["self"]],["isize"]]],[11,"process",E,E,55,[[["self"],[R[70]]]]],[11,R[107],E,E,55,[[[R[70]],["self"]]]],[11,R[71],E,E,55,[[["self"],["events"]]]],[11,R[108],E,E,55,[[["i32"],["self"]],[R[73]]]],[11,R[109],E,E,55,[[["i32"],["self"]],[R[73]]]],[11,R[110],E,E,55,[[["self"]],[[R[72]],["arc",[R[72]]]]]],[11,"eq",R[22],E,22,[[[R[24]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[24]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,"eq",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"clone",R[79],E,2,[[["self"]],["inputs"]]],[11,"clone",E,E,3,[[["self"]],["outputs"]]],[11,"clone",R[22],E,14,[[["self"]],[R[53]]]],[11,"clone",E,E,20,[[["self"]],["eventtype"]]],[11,"clone",E,E,10,[[["self"]],["event"]]],[11,"clone",E,E,12,[[["self"]],[R[111]]]],[11,"clone",E,E,13,[[["self"]],[R[62]]]],[11,"clone",E,E,21,[[["self"]],["smpteframerate"]]],[11,"clone",E,E,22,[[["self"]],[R[24]]]],[11,"clone",E,E,23,[[["self"]],[R[27]]]],[11,"clone",E,E,24,[[["self"]],[R[43]]]],[11,"clone",E,E,25,[[["self"]],[R[44]]]],[11,"clone",E,E,26,[[["self"]],[R[46]]]],[11,"clone",R[90],E,27,[[["self"]],["keycode"]]],[11,"clone",E,E,28,[[["self"]],[R[114]]]],[11,"clone",E,E,29,[[["self"]],["key"]]],[11,"clone",R[92],E,39,[[["self"]],["event"]]],[11,"clone",E,E,37,[[["self"]],["midievent"]]],[11,"clone",E,E,38,[[["self"]],[R[111]]]],[11,"clone",R[94],E,45,[[["self"]],[R[116]]]],[11,"clone",E,E,44,[[["self"]],["info"]]],[11,"clone",E,E,49,[[["self"]],[R[112]]]],[11,"cmp",R[22],E,22,[[[R[24]],["self"]],[R[113]]]],[11,"cmp",E,E,23,[[["self"],[R[27]]],[R[113]]]],[11,"cmp",E,E,24,[[["self"],[R[43]]],[R[113]]]],[11,"cmp",E,E,25,[[["self"],[R[44]]],[R[113]]]],[11,"cmp",E,E,26,[[[R[46]],["self"]],[R[113]]]],[11,"from",R[90],E,28,[[["i8"]],[R[114]]]],[11,"from",E,E,28,[[["i16"]],[R[114]]]],[11,"from",E,E,28,[[["i32"]],[R[114]]]],[11,"from",E,E,28,[[["i64"]],[R[114]]]],[11,"from",E,E,28,[[["isize"]],[R[114]]]],[11,"from",E,E,28,[[["u8"]],[R[114]]]],[11,"from",E,E,28,[[["u16"]],[R[114]]]],[11,"from",E,E,28,[[["u32"]],[R[114]]]],[11,"from",E,E,28,[[["u64"]],[R[114]]]],[11,"from",E,E,28,[[[R[0]]],[R[114]]]],[11,"from",E,E,29,[[["i8"]],["key"]]],[11,"from",E,E,29,[[["i16"]],["key"]]],[11,"from",E,E,29,[[["i32"]],["key"]]],[11,"from",E,E,29,[[["i64"]],["key"]]],[11,"from",E,E,29,[[["isize"]],["key"]]],[11,"from",E,E,29,[[["u8"]],["key"]]],[11,"from",E,E,29,[[["u16"]],["key"]]],[11,"from",E,E,29,[[["u32"]],["key"]]],[11,"from",E,E,29,[[["u64"]],["key"]]],[11,"from",E,E,29,[[[R[0]]],["key"]]],[11,"from",R[91],E,36,[[[R[115]]],[R[73]]]],[11,"from",E,E,35,[[[R[115]]],[R[53]]]],[11,"from",R[92],E,39,[[["event"]],["event"]]],[11,"from",R[94],E,45,[[["i8"]],[R[116]]]],[11,"from",E,E,45,[[["i16"]],[R[116]]]],[11,"from",E,E,45,[[["i32"]],[R[116]]]],[11,"from",E,E,45,[[["i64"]],[R[116]]]],[11,"from",E,E,45,[[["isize"]],[R[116]]]],[11,"from",E,E,45,[[["u8"]],[R[116]]]],[11,"from",E,E,45,[[["u16"]],[R[116]]]],[11,"from",E,E,45,[[["u32"]],[R[116]]]],[11,"from",E,E,45,[[["u64"]],[R[116]]]],[11,"from",E,E,45,[[[R[0]]],[R[116]]]],[11,R[84],R[79],E,2,[[]]],[11,R[84],E,E,3,[[]]],[11,"extend",R[22],E,22,[[["self"],[R[8]]]]],[11,"extend",E,E,23,[[["self"],[R[8]]]]],[11,"extend",E,E,24,[[[R[8]],["self"]]]],[11,"extend",E,E,25,[[[R[8]],["self"]]]],[11,"extend",E,E,26,[[["self"],[R[8]]]]],[11,"drop",R[93],E,55,[[["self"]]]],[11,"into",R[22],"Convert to integer ordinal for interop with VST api.",15,[[],["isize"]]],[11,"into",R[90],E,28,[[],["i8"]]],[11,"into",E,E,28,[[],["i16"]]],[11,"into",E,E,28,[[],["i32"]]],[11,"into",E,E,28,[[],["i64"]]],[11,"into",E,E,28,[[],["isize"]]],[11,"into",E,E,28,[[],["u8"]]],[11,"into",E,E,28,[[],["u16"]]],[11,"into",E,E,28,[[],["u32"]]],[11,"into",E,E,28,[[],["u64"]]],[11,"into",E,E,28,[[],[R[0]]]],[11,"into",E,E,29,[[],["i8"]]],[11,"into",E,E,29,[[],["i16"]]],[11,"into",E,E,29,[[],["i32"]]],[11,"into",E,E,29,[[],["i64"]]],[11,"into",E,E,29,[[],["isize"]]],[11,"into",E,E,29,[[],["u8"]]],[11,"into",E,E,29,[[],["u16"]]],[11,"into",E,E,29,[[],["u32"]]],[11,"into",E,E,29,[[],["u64"]]],[11,"into",E,E,29,[[],[R[0]]]],[11,"into",R[91],"Convert to the VST api equivalent of this structure.",36,[[],[R[115]]]],[11,"into",E,"Convert to VST API arrangement type.",35,[[],[R[53]]]],[11,"into",R[94],E,45,[[],["i8"]]],[11,"into",E,E,45,[[],["i16"]]],[11,"into",E,E,45,[[],["i32"]]],[11,"into",E,E,45,[[],["i64"]]],[11,"into",E,E,45,[[],["isize"]]],[11,"into",E,E,45,[[],["u8"]]],[11,"into",E,E,45,[[],["u16"]]],[11,"into",E,E,45,[[],["u32"]]],[11,"into",E,E,45,[[],["u64"]]],[11,"into",E,E,45,[[],[R[0]]]],[11,"into",E,E,46,[[],[R[74]]]],[11,R[117],R[22],E,22,[[[R[24]],["self"]],[[R[113]],[R[45],[R[113]]]]]],[11,"lt",E,E,22,[[[R[24]],["self"]],["bool"]]],[11,"le",E,E,22,[[[R[24]],["self"]],["bool"]]],[11,"gt",E,E,22,[[[R[24]],["self"]],["bool"]]],[11,"ge",E,E,22,[[[R[24]],["self"]],["bool"]]],[11,R[117],E,E,23,[[["self"],[R[27]]],[[R[113]],[R[45],[R[113]]]]]],[11,"lt",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,"le",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,"gt",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,"ge",E,E,23,[[["self"],[R[27]]],["bool"]]],[11,R[117],E,E,24,[[["self"],[R[43]]],[[R[113]],[R[45],[R[113]]]]]],[11,"lt",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,"le",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,"gt",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,"ge",E,E,24,[[["self"],[R[43]]],["bool"]]],[11,R[117],E,E,25,[[["self"],[R[44]]],[[R[113]],[R[45],[R[113]]]]]],[11,"lt",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,"le",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,"gt",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,"ge",E,E,25,[[["self"],[R[44]]],["bool"]]],[11,R[117],E,E,26,[[[R[46]],["self"]],[[R[113]],[R[45],[R[113]]]]]],[11,"lt",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"le",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"gt",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"ge",E,E,26,[[[R[46]],["self"]],["bool"]]],[11,"next",R[79],E,52,[[["self"]],[R[45]]]],[11,"next",E,E,53,[[["self"]],[R[45]]]],[11,"next",R[22],E,54,[[["self"]],[R[45]]]],[11,"next",R[95],E,56,[[["self"]],[R[45]]]],[11,R[118],R[79],E,4,[[],["self"]]],[11,R[118],R[22],E,13,[[],[R[62]]]],[11,R[118],E,E,21,[[],["self"]]],[11,R[118],R[91],E,35,[[],[R[53]]]],[11,R[118],R[94],E,44,[[],["info"]]],[11,R[118],E,E,49,[[],[R[112]]]],[11,R[118],R[95],E,51,[[],["parametertransfer"]]],[11,"fmt",R[22],E,20,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,21,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,22,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,23,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,25,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,26,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",R[90],E,27,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,28,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,29,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",R[93],E,40,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",R[94],E,45,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,44,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",E,E,46,[[[R[119]],["self"]],[R[81]]]],[11,"fmt",R[93],E,40,[[[R[119]],["self"]],[R[81]]]],[11,"hash",R[22],E,22,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"sub",E,R[120],22,[[[R[24]]],[R[24]]]],[11,"sub",E,R[120],23,[[[R[27]]],[R[27]]]],[11,"sub",E,R[120],24,[[[R[43]]],[R[43]]]],[11,"sub",E,R[120],25,[[[R[44]]],[R[44]]]],[11,"sub",E,R[120],26,[[[R[46]]],[R[46]]]],[11,R[121],E,R[122],22,[[["self"],[R[24]]]]],[11,R[121],E,R[122],23,[[["self"],[R[27]]]]],[11,R[121],E,R[122],24,[[[R[43]],["self"]]]],[11,R[121],E,R[122],25,[[["self"],[R[44]]]]],[11,R[121],E,R[122],26,[[["self"],[R[46]]]]],[11,"not",E,R[123],22,[[],[R[24]]]],[11,"not",E,R[123],23,[[],[R[27]]]],[11,"not",E,R[123],24,[[],[R[43]]]],[11,"not",E,R[123],25,[[],[R[44]]]],[11,"not",E,R[123],26,[[],[R[46]]]],[11,"bitand",E,R[124],22,[[[R[24]]],[R[24]]]],[11,"bitand",E,R[124],23,[[[R[27]]],[R[27]]]],[11,"bitand",E,R[124],24,[[[R[43]]],[R[43]]]],[11,"bitand",E,R[124],25,[[[R[44]]],[R[44]]]],[11,"bitand",E,R[124],26,[[[R[46]]],[R[46]]]],[11,"bitor",E,R[125],22,[[[R[24]]],[R[24]]]],[11,"bitor",E,R[125],23,[[[R[27]]],[R[27]]]],[11,"bitor",E,R[125],24,[[[R[43]]],[R[43]]]],[11,"bitor",E,R[125],25,[[[R[44]]],[R[44]]]],[11,"bitor",E,R[125],26,[[[R[46]]],[R[46]]]],[11,"bitxor",E,R[126],22,[[[R[24]]],[R[24]]]],[11,"bitxor",E,R[126],23,[[[R[27]]],[R[27]]]],[11,"bitxor",E,R[126],24,[[[R[43]]],[R[43]]]],[11,"bitxor",E,R[126],25,[[[R[44]]],[R[44]]]],[11,"bitxor",E,R[126],26,[[[R[46]]],[R[46]]]],[11,R[127],E,R[128],22,[[["self"],[R[24]]]]],[11,R[127],E,R[128],23,[[["self"],[R[27]]]]],[11,R[127],E,R[128],24,[[[R[43]],["self"]]]],[11,R[127],E,R[128],25,[[["self"],[R[44]]]]],[11,R[127],E,R[128],26,[[["self"],[R[46]]]]],[11,R[129],E,R[130],22,[[["self"],[R[24]]]]],[11,R[129],E,R[130],23,[[["self"],[R[27]]]]],[11,R[129],E,R[130],24,[[[R[43]],["self"]]]],[11,R[129],E,R[130],25,[[["self"],[R[44]]]]],[11,R[129],E,R[130],26,[[["self"],[R[46]]]]],[11,R[131],E,R[132],22,[[["self"],[R[24]]]]],[11,R[131],E,R[132],23,[[["self"],[R[27]]]]],[11,R[131],E,R[132],24,[[[R[43]],["self"]]]],[11,R[131],E,R[132],25,[[["self"],[R[44]]]]],[11,R[131],E,R[132],26,[[["self"],[R[46]]]]],[11,"index",R[79],E,2,[[["self"],[R[0]]]]],[11,"index",E,E,3,[[["self"],[R[0]]]]],[11,"index_mut",E,E,3,[[["self"],[R[0]]]]],[11,R[133],R[22],E,22,[[[R[8]]],[R[24]]]],[11,R[133],E,E,23,[[[R[8]]],[R[27]]]],[11,R[133],E,E,24,[[[R[8]]],[R[43]]]],[11,R[133],E,E,25,[[[R[8]]],[R[44]]]],[11,R[133],E,E,26,[[[R[8]]],[R[46]]]],[11,"fmt",E,E,22,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,23,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,25,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,26,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,22,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,23,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,25,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,26,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,22,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,23,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,25,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,26,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,22,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,23,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,25,[[["self"],[R[119]]],[R[81]]]],[11,"fmt",E,E,26,[[["self"],[R[119]]],[R[81]]]],[11,"description",R[93],E,40,[[["self"]],["str"]]]],"p":[[8,R[134]],[3,R[135]],[3,"Inputs"],[3,"Outputs"],[3,R[136]],[3,"AEffect"],[3,R[137]],[3,"FileType"],[3,R[138]],[3,"Events"],[3,"Event"],[3,R[54]],[3,R[60]],[3,"TimeInfo"],[4,R[51]],[4,R[139]],[4,R[140]],[4,R[141]],[4,R[142]],[4,R[143]],[4,R[144]],[4,R[145]],[3,R[146]],[3,R[147]],[3,R[148]],[3,R[149]],[3,R[150]],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[8,"Editor"],[4,R[151]],[4,R[152]],[4,R[153]],[4,R[154]],[4,R[51]],[3,R[155]],[3,R[54]],[3,R[60]],[4,"Event"],[4,R[156]],[8,"Host"],[3,R[157]],[3,R[158]],[3,"Info"],[4,"Category"],[4,"CanDo"],[8,"Plugin"],[8,R[159]],[3,R[160]],[3,R[161]],[3,R[162]],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[166]],[3,R[167]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);